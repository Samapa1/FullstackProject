services:
  - type: web
    env: node
    name: project-prod-backend
    repo: https://github.com/Samapa1/FullstackProject
    buildCommand: cd backend; npm ci 
    startCommand: cd backend; npm start
    plan: free
    envVars:
      - key: DATABASE
        fromDatabase:
          name: project-prod-db 
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: project-prod-redis 
          property: connectionString

  - type: web
    env: static
    name: project-prod-frontend
    repo: https://github.com/Samapa1/FullstackProject
    buildCommand: cd frontend; npm ci; npm run build
    staticPublishPath: ./frontend/dist

  - type: redis
    name: project-prod-redis 
    ipAllowList: []
    plan: free

databases: 
  - name: project-prod-db
    plan: free


# services:
# - type: web
#     runtime: image
#     name: project-front-prod
#     image:
#       url: docker.io/saijapa/bookapp-frontend:latest
# - type: web
#     runtime: image
#     name: project-back-prod
#     image:
#       url: docker.io/saijapa/bookapp-backend:latest
# - type: web 
#     runtime: image
#     name: app-nginx
#     image:
#       url: docker.io/library/nginx:latest
#     envVars:
#       - key: HOST
#         value: "0.0.0.0"
#       - key: PORT
#         value: 8080
# - type: web 
#     runtime: image
#     name: app-postgres
#     image:
#       url: docker.io/library/postgres:latest
#     envVars:
#       - key: REDIS_URL
#         value: redis://redis:6379
#       - key: DATABASE
#         value: postgres://postgres:example@db:5432/postgres
#       - key: PORT
#         value: 5432
# - type: web 
#     runtime: image
#     name: app-redis
#     image:
#       url: docker.io/library/redis:latest
#     envVars:
#       - key: PORT
#         value: 6379





  



